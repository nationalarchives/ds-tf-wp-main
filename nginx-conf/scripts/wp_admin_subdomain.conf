# admin access for subdomain sites
server {
    listen          80;
    server_name     ~^(?<subdomain>[\w-]+)\.${environment}wp\.nationalarchives\.gov\.uk$;
    server_tokens   off;

    include admin_ips.conf;

    # aws efs
    root /var/nationalarchives.gov.uk/;

    set_real_ip_from    ${set_real_ip_from};
    real_ip_header      X-Forwarded-For;
    real_ip_recursive   on;

    gzip            on;
    gzip_proxied    expired no-cache no-store private auth;
    gzip_types      *;

    add_header X-Frame-Options          SAMEORIGIN;
    add_header Referrer-Policy          "no-referrer-when-downgrade" always;
    add_header X-XSS-Protection         "1; mode-block";
    add_header Set-Cookie               "Path=/; HttpOnly; Secure";
    add_header X-Content-Type-Options   "nosniff";

    server_name_in_redirect     off;

    proxy_intercept_errors      on;
    proxy_buffering             off;
    proxy_buffer_size           4k;
    proxy_http_version          1.1;
    proxy_redirect              off;
    proxy_pass_request_headers  on;

    proxy_set_header Host                    $proxy_host; #$sub_backend_url;
    proxy_set_header X-Forwarded-Proto       "http";
    proxy_set_header HTTP_X_FORWARDED_PROTO  "http";
    proxy_set_header HTTP_X_FORWARDED_HOST   $sub_backend_url;
    proxy_set_header X_HOST_TYPE             "private";
    proxy_set_header X-Forwarded-For         $proxy_add_x_forwarded_for;
    proxy_set_header X-NginX-Proxy           true;
    proxy_set_header X-Real-IP               $remote_addr;
    proxy_set_header Accept-Encoding         "";
    proxy_set_header X-Forwarded-Host        $sub_backend_url;
    proxy_set_header Upgrade                 $http_upgrade;
    proxy_set_header Connection              "upgrade";

    proxy_cookie_path /                     "/; secure; HttpOnly;";
    proxy_cookie_domain $backend_url        $proxy_url;
    proxy_cookie_domain ~(.*)$.$backend_url $proxy_url;

    ssi on;
    ssi_last_modified on;

    set $backend_url        website.${environment}.local;
    set $ups_backend        http://$subdomain.$backend_url;
    set $proxy_url          ${environment}wp.nationalarchives.gov.uk;

    set $sub_backend_url    $subdomain.$backend_url;
    set $sub_proxy_url      $subdomain.$proxy_url;
    set $ups_sub_proxy      https://$sub_proxy_url;

    sub_filter_once off;

    # make all requests https
    sub_filter http://    https://;
    sub_filter http:\/\/  https:\/\/;

    # subdomain replacement
    subs_filter (https?:)(\/\/|\\\/\\\/)([-a-zA-Z0-9]*)(\.website\.${environment}\.local) https://$3.$proxy_url gir;
    subs_filter (https?:)(\/\/|\\\/\\\/)(website\.${environment}\.local) https://$proxy_url gir;

    rewrite ^([^.]*[^/])$ $1/ permanent;

    # ----------------------------------------------------------------------
    # error pages hosted on efs
    # ----------------------------------------------------------------------
    error_page 403 =             /error-page/error_403.html;
    error_page 404 =             /error-page/error_404.html;
    error_page 500 502 503 504 = /error-page/error_500.html;
    error_page 301 302 307 =     @handle_redirect;

    location @handle_redirect {
        set $saved_redirect_location '$upstream_http_location';
        proxy_pass $saved_redirect_location;
    }
    # ----------------------------------------------------------------------

    # ----------------------------------------------------------------------
    # local file handling and if not in location proxy to back-end
    # ----------------------------------------------------------------------
    location / {
        try_files $uri $uri/ @notlocal;
    }

    location @notlocal {
        proxy_pass $ups_backend/index.php$1$is_args$args;
    }

    # ----------------------------------------------------------------------
    # this should be the last entry for regex -> catch all
    # ----------------------------------------------------------------------
    location ~* ^/(.*)$ {
        try_files $uri $uri/ @notlocal2;
    }

    location @notlocal2 {
        proxy_pass $ups_backend/$1$is_args$args;
    }
}
